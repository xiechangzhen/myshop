<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"      
	"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.linkage.myshop.mapper.UserMapper">
	<insert id="addNew" useGeneratedKeys="true" keyProperty="id" parameterType="com.linkage.myshop.entity.User" >
		
		<!-- 插入用户数据 -->
		<!-- Integer addNew(User user) -->
		INSERT INTO 
			t_user
		(
			username,password,
			salt,gender,
			phone,email,
			avatar,is_delete,
			create_user,create_time,
			modified_user,modified_time
		) VALUES(
			#{username},#{password},
			#{salt},#{gender},
			#{phone},#{email},
			#{avatar},#{isDelete},
			#{createUser},#{createTime},
			#{modifiedUser},#{modifiedTime}			
		)

	</insert>

		<!--  根据用户名查询用户数据 -->
		<!--  应用于：登录，注册 -->
		<!-- User login(String username) -->
	<select id="findByUsername" 
		resultType="com.linkage.myshop.entity.User">
		
		SELECT 
			id, username,
			password,salt,
			avatar,is_delete isDelete,
			avatar
		FROM 
			t_user
		WHERE 
			username = #{username}
	</select >
	
	<!--  根据用户id查询用户数据 -->
	<!-- 用于更改用户密码，资料 -->
	<!--User findById(Integer id) -->
	<select id="findById" resultType="com.linkage.myshop.entity.User">
		SELECT 
			username,password,
			salt,is_delete AS isDelete,
			phone,email,
			gender
		FROM 
			t_user
		WHERE 
			id = #{id}
	</select >

	<!--  修改用户密码 -->
	<!--Integer changePassword(@Param("id") Integer id,用户id
								@Param("password") String password ,修改后的密码
								@Param("modifiedUser") String modifiedUser ,修改者
								@Param("modifiedTime") Date modifiedTime );修改时间
	 -->
	<update id="changePassword" >
		UPDATE 
			t_user 
		SET 
			password=#{password},modified_user=#{modifiedUser},
			modified_time=#{modifiedTime}	
		WHERE 
			id=#{id}	
	</update>
	
	<!-- 	
		修改用户信息（通常id和username不允许修改，password和avatar是单独的功能）							
	  @param user 用户提交的信息
	  @return 返回影响结果的行数 
	Integer updateInfo(User user);
	-->
	<update id="updateInfo" parameterType="com.linkage.myshop.entity.User">
		UPDATE 
			t_user 
		SET 
			<if test="phone != null" >
				phone=#{phone},
			</if>
			<if test="email != null" >
				email=#{email},
			</if>
			<if test="gender != null" >
				gender=#{gender},
			</if>
			modified_user=#{modifiedUser},
			modified_time=#{modifiedTime}
		WHERE 
			id=#{id}	
	</update>
	
	<update id="updateAvatar" >
		UPDATE 
			t_user 
		SET 
			modified_user=#{modifiedUser},
			modified_time=#{modifiedTime},
			avatar=#{avatar}
		WHERE 
			id=#{id}	
	</update>
	
	
	
	
	
</mapper>








